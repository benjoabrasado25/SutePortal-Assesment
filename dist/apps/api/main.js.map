{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/main.ts","webpack:///./apps/api/src/maintenance-request/maintenance-request.controller.ts","webpack:///./apps/api/src/maintenance-request/maintenance-request.dao.ts","webpack:///./apps/api/src/maintenance-request/maintenance-request.module.ts","webpack:///./apps/api/src/maintenance-request/maintenance-request.service.ts","webpack:///./libs/api-interfaces/src/index.ts","webpack:///./libs/api-interfaces/src/lib/api-interfaces.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"lowdb\"","webpack:///external \"lowdb/adapters/FileSync\"","webpack:///external \"nanoid\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { MaintenanceRequestModule } from '../maintenance-request/maintenance-request.module';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [MaintenanceRequestModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to api!' };\n  }\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.enableCors();\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n","import { BadRequestException, Body, Controller, Post, Get, Param, Put } from '@nestjs/common';\nimport { MaintenanceRequest } from '@suiteportal/api-interfaces';\nimport { MaintenanceRequestService } from './maintenance-request.service';\n\n@Controller('maintenance-requests')\nexport class MaintenanceRequestController {\n\n  constructor(\n    private readonly maintenanceRequestService: MaintenanceRequestService,\n  ) {\n    //\n  }\n\n  @Post('/')\n  public async createMaintenanceRequest(\n    @Body() maintenanceRequest: MaintenanceRequest,\n  ) {\n    if (!maintenanceRequest?.name) {\n      throw new BadRequestException('Must provide a valid name');\n    }\n    if (!maintenanceRequest?.unitNumber) {\n      throw new BadRequestException('Must provide a valid unit number');\n    }\n    if (!maintenanceRequest?.email) {\n      throw new BadRequestException('Must provide a valid unit email');\n    }\n    if (!maintenanceRequest?.summary) {\n      throw new BadRequestException('Must provide a valid summary');\n    }\n    if (!maintenanceRequest?.serviceType) {\n      throw new BadRequestException('Must provide a valid Service Type');\n    }\n    if (!maintenanceRequest?.details) {\n      throw new BadRequestException('Must provide a valid unit details');\n    }\n    maintenanceRequest[\"close\"] = false;\n    return await this.maintenanceRequestService.createMaintenanceRequest(maintenanceRequest);\n  }\n\n  @Post('/login')\n  public async loginWithEmailAndPassword(\n    @Body() maintenanceRequest: MaintenanceRequest,\n  ) {\n    if (!maintenanceRequest?.email) {\n      throw new BadRequestException('Must provide a email name!');\n    }\n    if (!maintenanceRequest?.password) {\n      throw new BadRequestException('Password Cannot be empty!');\n    }\n\n    return await this.maintenanceRequestService.loginWithEmailAndPassword(maintenanceRequest.email, maintenanceRequest.password);\n  }\n\n  @Get('/:id')\n  public async getMaintenanceRequest(\n    @Param('id') id: string,\n  ) {\n    if (!id) {\n      throw new BadRequestException('No id provided');\n    }\n    return await this.maintenanceRequestService.getMaintenanceRequest(id);\n  }\n  @Put('/:id/close')\n  public async closeMaintenanceRequest(\n    @Param('id') id: string,\n  ) {\n    if (!id) {\n      throw new BadRequestException('No id provided');\n    }\n    return await this.maintenanceRequestService.closeMaintenanceRequest(id);\n  }\n\n  @Get('/')\n  public async getMaintenanceRequestList() {\n    return await this.maintenanceRequestService.getMaintenanceRequestList();\n  }  \n\n}\n","import { Injectable } from '@nestjs/common';\nimport { MaintenanceRequest } from '@suiteportal/api-interfaces';\nimport * as low from 'lowdb';\nimport * as FileSync from 'lowdb/adapters/FileSync';\nimport * as nanoid from 'nanoid';\n\nexport interface MaintenanceRequestDB extends MaintenanceRequest {\n  id: string;\n  submittedAt: Date;\n}\n\nexport interface MaintenanceRequestData {\n  requests: MaintenanceRequestDB[];\n}\n\nconst adapter = new FileSync<MaintenanceRequestDB>('./db/maint-requests.json')\nconst db = low(adapter)\n\ndb.defaults({ requests: [] }).write();\n\n@Injectable()\nexport class MaintenanceRequestDao {\n\n  private get collection(): any {\n    return db.get('requests');\n  }\n  private get users_collection(): any {\n    return db.get('users');\n  }\n\n  constructor() {\n    //\n  }\n\n  async insertNewRequest(maintenanceRequest: MaintenanceRequest) {\n    const id = { id: nanoid.nanoid(10) };\n    await this.collection\n      .push({\n        ...id,\n        ...maintenanceRequest,\n        submittedAt: new Date(),\n      })\n      .write()\n    return id;\n  }\n\n  async closeMaintenanceRequest(id: string): Promise<MaintenanceRequestDB> {\n    return await this.collection.chain().find({id: id}).assign({close: true}).write();\n  }\n\n  async loginWithEmailAndPassword(email, password){\n    let user = await this.users_collection.find({ email: email }).value();\n    console.log(user, password)\n    if(user[\"password\"] === password){\n      return {user};\n    }\n    else{\n      return {\n        message: \"login failed!\"\n      };\n    }\n  }\n\n  async getMaintenanceRequest(id: string): Promise<MaintenanceRequestDB> {\n    return await this.collection.find({ id }).value();\n  }\n\n  async getMaintenanceRequestList(): Promise<MaintenanceRequestDB>{\n    return await this.collection.value();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { MaintenanceRequestController } from './maintenance-request.controller';\nimport { MaintenanceRequestDao } from './maintenance-request.dao';\nimport { MaintenanceRequestService } from './maintenance-request.service';\n\n\n@Module({\n  imports: [],\n  controllers: [MaintenanceRequestController],\n  providers: [\n    MaintenanceRequestService,\n    MaintenanceRequestDao,\n  ],\n})\nexport class MaintenanceRequestModule {}\n","import { Injectable } from '@nestjs/common';\nimport { MaintenanceRequest } from '@suiteportal/api-interfaces';\nimport { MaintenanceRequestDao, MaintenanceRequestDB } from './maintenance-request.dao';\n\n@Injectable()\nexport class MaintenanceRequestService {\n\n  constructor(\n    private readonly maintReqDao: MaintenanceRequestDao,\n  ) {\n    //\n  }\n\n  async createMaintenanceRequest(maintenanceRequest: MaintenanceRequest) {\n    return await this.maintReqDao.insertNewRequest(maintenanceRequest);\n  }\n\n  async getMaintenanceRequest(id: string): Promise<MaintenanceRequestDB> {\n    return await this.maintReqDao.getMaintenanceRequest(id);\n  }\n\n  async getMaintenanceRequestList(): Promise<MaintenanceRequestDB>{\n    return await this.maintReqDao.getMaintenanceRequestList();\n  }\n\n  async loginWithEmailAndPassword(email, password){\n    return await this.maintReqDao.loginWithEmailAndPassword(email, password);\n  }\n\n  async closeMaintenanceRequest(id): Promise<MaintenanceRequestDB>{\n    return await this.maintReqDao.closeMaintenanceRequest(id);\n  }\n}\n","export * from './lib/api-interfaces';\n","export enum ServiceType {\n  Electrical = 'electrical',\n  General = 'general',\n  PestControl = 'pest-control',\n  Plumbing = 'plumbing',\n}\n\nexport const ALL_SERVICE_TYPES = [\n  ServiceType.Electrical ,\n  ServiceType.General ,\n  ServiceType.PestControl ,\n  ServiceType.Plumbing ,\n];\n\nexport interface MaintenanceRequest {\n  // Name of the requester\n  name: string;\n  // Email of the requester\n  email: string;\n  // The unit # in the building\n  unitNumber: string;\n  // The type of service being requested\n  serviceType: ServiceType;\n  // A summary of of the issue\n  summary: string;\n  // Any extra details\n  details?: string;\n}\n\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"lowdb\");","module.exports = require(\"lowdb/adapters/FileSync\");","module.exports = require(\"nanoid\");","module.exports = require(\"tslib\");"],"sourceRoot":""}